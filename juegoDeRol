import random

class Personaje:
    def __init__(self, nombre):
        self.nombre = nombre

    def atacar(self):
        raise NotImplementedError()

    def defender(self):
        raise NotImplementedError()

    def ataqueAcerto(self):
        return random.random() < 0.5 #genera un número aleatorio y devuelve True si el número es menor que 0.5.
"---------------------------------------------------------------------------------------------"
class Enemigo:
    def __init__(self, nombre):
        self.nombre = nombre

    def atacar(self, personaje):
        if personaje.defender():
            print(f"{self.nombre} ataca a {personaje.nombre}, pero {personaje.nombre} se defiende exitosamente.")
        else:
            print(f"{self.nombre} ataca a {personaje.nombre} y logra hacerle daño.")

    def defender(self):
        return random.random() < 0.5 #genera un número aleatorio y devuelve True si el número es menor que 0.5.

"---------------------------------------------------------------------------------------------"
class Guerrero(Personaje):
    def atacar(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} realiza un poderoso ataque con su espada y acierta.")
        else:
            print(f"{self.nombre} realiza un poderoso ataque con su espada, pero falla.")

    def defender(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} bloquea el ataque con su escudo.")
            return True
        else:
            print(f"{self.nombre} no logra bloquear el ataque y recibe daño.")
            return False
"---------------------------------------------------------------------------------------------"
class Mago(Personaje):
    def atacar(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} lanza una bola de fuego a sus enemigos y acierta.")
        else:
            print(f"{self.nombre} lanza una bola de fuego a sus enemigos, pero falla.")

    def defender(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} crea un escudo mágico para protegerse.")
            return True
        else:
            print(f"{self.nombre} no logra bloquear el ataque y recibe daño.")
            return False
"---------------------------------------------------------------------------------------------"
class Arquero(Personaje):
    def atacar(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} dispara una flecha hacia sus enemigos y acierta.")
        else:
            print(f"{self.nombre} dispara una flecha hacia sus enemigos, pero falla.")

    def defender(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} se mueve rápidamente para esquivar el ataque.")
            return True
        else:
            print(f"{self.nombre} no logra bloquear el ataque y recibe daño.")
            return False
"---------------------------------------------------------------------------------------------"
class CrearPersonajes:
    def crear_personaje(self, tipo, nombre):
        if tipo == "guerrero":
            return Guerrero(nombre)
        elif tipo == "mago":
            return Mago(nombre)
        elif tipo == "arquero":
            return Arquero(nombre)
        else:
            raise ValueError(f"Tipo de personaje desconocido: {tipo}")
"---------------------------------------------------------------------------------------------"
creador = CrearPersonajes()

personaje1 = creador.crear_personaje("guerrero", "Aragorn")
personaje1.atacar()

enemigo1 = Enemigo("Orco")
enemigo1.atacar(personaje1)

print("----------------------------------------------------------")

personaje2 = creador.crear_personaje("mago", "Gandalf")
personaje2.atacar()

enemigo2 = Enemigo("Dragon")
enemigo2.atacar(personaje2)

print("----------------------------------------------------------")

personaje3 = creador.crear_personaje("arquero", "Legolas")
personaje3.atacar()

enemigo3 = Enemigo("Troll")
enemigo3.atacar(personaje3)
