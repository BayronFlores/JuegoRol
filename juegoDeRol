import random

class Personaje:
    def __init__(self, nombre):
        self.nombre = nombre

    def atacar(self):
        raise NotImplementedError()

    def defender(self):
        raise NotImplementedError()

    def ataqueAcerto(self):
        return random.random() < 0.5 #genera un número aleatorio y devuelve True si el número es menor que 0.5.
"-----------------------------------------------------------------------------------------------------------------"
class Enemigo:
    def __init__(self, nombre):
        self.nombre = nombre

    def atacar(self, personaje):
        if personaje.defender():
            print(f"{self.nombre} ataca a {personaje.nombre}, pero {personaje.nombre} se defiende exitosamente.")
        else:
            print(f"{self.nombre} ataca a {personaje.nombre} y logra hacerle daño.")

    def defender(self):
        return random.random() < 0.5 #genera un número aleatorio y devuelve True si el número es menor que 0.5.
"-----------------------------------------------------------------------------------------------------------------"
class Guerrero(Personaje):
    def atacar(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} realiza un ataque con su espada y acierta.")
        else:
            print(f"{self.nombre} realiza un ataque con su espada, pero falla.")

    def defender(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} bloquea el ataque con su escudo.")
            return True
        else:
            print(f"{self.nombre} no logra bloquear el ataque y recibe daño.")
            return False
"-----------------------------------------------------------------------------------------------------------------"
class Mago(Personaje):
    def atacar(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} lanza una bola de fuego a su enemigo y acierta.")
        else:
            print(f"{self.nombre} lanza una bola de fuego a su enemigo, pero falla.")

    def defender(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} crea un escudo mágico para protegerse.")
            return True
        else:
            print(f"{self.nombre} no logra bloquear el ataque y recibe daño.")
            return False
"-----------------------------------------------------------------------------------------------------------------"
class Arquero(Personaje):
    def atacar(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} dispara una flecha hacia su enemigo y acierta.")
        else:
            print(f"{self.nombre} dispara una flecha hacia su enemigo, pero falla.")

    def defender(self):
        if self.ataqueAcerto():
            print(f"{self.nombre} se mueve rápidamente para esquivar el ataque.")
            return True
        else:
            print(f"{self.nombre} no logra bloquear el ataque y recibe daño.")
            return False
"-----------------------------------------------------------------------------------------------------------------"
class CrearPersonajes:
    def crear_personaje(self, tipo, nombre):
        if tipo == "guerrero":
            return Guerrero(nombre)
        elif tipo == "mago":
            return Mago(nombre)
        elif tipo == "arquero":
            return Arquero(nombre)
        else:
            raise ValueError(f"Tipo de personaje desconocido: {tipo}")
"-----------------------------------------------------------------------------------------------------------------"
creador = CrearPersonajes()

tipo_personaje = ""
while tipo_personaje not in ["guerrero", "mago", "arquero"]: #solicitar la entrada hasta que se proporcione un valor válido
    tipo_personaje = input("Selecciona el tipo de personaje (guerrero, mago, arquero): ")

nombre_personaje = input("Ingresa el nombre del personaje: ")



personaje = creador.crear_personaje(tipo_personaje, nombre_personaje)
personaje.atacar()

enemigo = Enemigo("Orco")
enemigo.atacar(personaje)
